import groovy.transform.Memoized

@Memoized
private static List<String> getSonarExclusions() {
    return new File("testcov.exclude").readLines()
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    executionData.from = fileTree(buildDir).include("/jacoco/*.exec")
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
    }

    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it,
                exclude: getSonarExclusions())
        })
    }
}

jacocoTestCoverageVerification {
    executionData.from = fileTree(buildDir).include("/jacoco/*.exec")
    violationRules {
        rule {
            limit {
                def minTestCov = System.properties.get("minTestCov")
                minimum = (minTestCov == null) ? 0.80 : new BigDecimal(minTestCov.toString())
            }
        }
    }

    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it,
                exclude: getSonarExclusions())
        })
    }
}

check.dependsOn jacocoTestCoverageVerification
